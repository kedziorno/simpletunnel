cmake_minimum_required(VERSION 3.5)

project(stream_descriptor LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_VERBOSE_MAKEFILE ON)

set(CMAKE_BUILD_TYPE "Debug")
#set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wpedantic -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -ggdb -Og")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
set(BOOST_LIBS_LIST system thread)

find_package(Boost 1.70.0 REQUIRED COMPONENTS ${BOOST_LIBS_LIST})
if (NOT Boost_FOUND)
	message(FATAL_ERROR "Boost libs ${BOOST_LIBS_LIST} not found")
else()
	message(STATUS "BOOST FOUND -> ${BOOST_FOUND}")
	#message(STATUS "Recognized BOOST Includes : '${Boost_INCLUDE_DIRS}'")
	#message(STATUS "Recognized BOOST Libraries : '${Boost_LIBRARY_DIRS}'")
endif()

find_package(OpenSSL REQUIRED)
if (NOT OPENSSL_FOUND)
	message(FATAL_ERROR "OpenSSL Not Found")
else()
	message(STATUS "OPENSSL FOUND -> ${OPENSSL_FOUND}")
	#message(STATUS "Using OpenSSL version : ${OPENSSL_VERSION}")
	#message(STATUS "Using OpenSSL headers : ${OPENSSL_INCLUDE_DIR}")
	#message(STATUS "Using OpenSSL crypto library : ${OPENSSL_CRYPTO_LIBRARY}")
	#message(STATUS "Using OpenSSL crypto libraries : ${OPENSSL_CRYPTO_LIBRARIES}")
	#message(STATUS "Using OpenSSL ssl library : ${OPENSSL_SSL_LIBRARY}")
	#message(STATUS "Using OpenSSL ssl libraries : ${OPENSSL_SSL_LIBRARIES}")
	#message(STATUS "Using OpenSSL libraries : ${OPENSSL_LIBRARIES}")
endif()

include(cmake/FindPcapPlusPlus.cmake)

add_definitions(-DASIO_DTLS_USE_BOOST -DASIO_HEADER_ONLY -DPCAPPLUSPLUS)
include_directories(SYSTEM ${Boost_INCLUDE_DIRS} ${OPENSSL_INCLUDE_DIR} ${LIBPCAP_INCLUDE_DIRS} ${PCAPPLUSPLUS_INCLUDE_DIRS} deps/asio_dtls/include)
add_executable(stream_descriptor main.cpp config.hpp dbgstr.cpp dbgstr.hpp pfplog.cpp pfplog.hpp tun_device.cpp tun_device.hpp tcp_ssl_context.cpp tcp_ssl_context.hpp udp_dtls_context.cpp udp_dtls_context.hpp server_tcp.cpp server_tcp.hpp unused_code.hpp)
target_link_libraries(stream_descriptor ${OPENSSL_CRYPTO_LIBRARY} ${OPENSSL_SSL_LIBRARY} ${Boost_LIBRARY_DIR} pthread boost_system boost_thread ${LIBPCAP_LINK_LIBRARIES} ${PCAPPLUSPLUS_LINK_LIBRARIES})
